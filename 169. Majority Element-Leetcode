//1st solution by sorting
//TC-O(nlogn)
//SC-O(1)

class Solution {
    public int majorityElement(int[] nums) {
        Arrays.sort(nums);
        int i = 0;
        int j = nums[i];
        int count = 0;
        int result = 0;
        while(nums[i]==j){
            if(nums[i]==j){
                i++;
                count++;
                if(count>(nums.length/2)) return j;
            else{
                j = nums[i];
            }
            }
        }return 0;
    }
}

//2nd solution by using Mooreâ€™s Voting Algorithm
//TC-O(nlogn)
//SC-O(1)
class Solution {
    public int majorityElement(int[] nums) {
        int count = 0;
        int melement = 0;
        for(int i = 0; i<nums.length; i++){
            if(count == 0) melement = nums[i];
            if(nums[i] == melement) count++;
            else if(nums[i]!=melement) count--;
        }return melement;
    }
}
