class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        ArrayList<List<Integer>> output = new ArrayList<List<Integer>>();
        if(nums.length<4) return output;
        Arrays.sort(nums);
        int l = 0, h = 0, sum = 0, n = nums.length;
        for(int i = 0; i<nums.length-3; i++){
            if((i==0) || (i>0 && (nums[i]!=nums[i-1]))){
            for(int j = i+1; j<nums.length-2; j++){
                if((j==i+1) || (j>1 && (nums[j]!=nums[j-1]))){
                    sum = target - (nums[i] + nums[j]);
                    l = j+1;
                    h = n-1;
                    while(l<h){
                        if((nums[l] + nums[h])>sum) h--;
                        else if((nums[l] + nums[h])<sum) l++;
                        else{
                            List<Integer> a = new ArrayList();
                            a.add(nums[i]);
                            a.add(nums[j]);
                            a.add(nums[l++]);
                            a.add(nums[h--]);
                            output.add(a);
                            while(l<h && (nums[l]==a.get(2))) l++;   
                            while(l<h && (nums[h]==a.get(3))) h--;
            }
        }
    }
            }
            }
        }return output;
}
    }
