/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int current = 0;
        int carry = 0;
        int data1 = 0;
        int data2 = 0;
        ListNode newHead = new ListNode(0);
        ListNode l3 = newHead;
        while(l1!=null || l2!=null){
            if(l1 == null) data1 = 0;
            else data1 = l1.val;
            if(l2 == null) data2 = 0;
            else data2 = l2.val;
            current = data1 + data2 + carry;
            carry = current/10;
            ListNode newNode = new ListNode(current%10);
            l3.next = newNode;
            l3 = l3.next;
            if(l1 == null) l1 = null;
            else l1 = l1.next;
            if(l2 == null) l2 = null;
            else l2 = l2.next;
        }
        if(carry == 1){
            ListNode last = new ListNode(1);
            l3.next = last;
        }
        return newHead.next;
    }
}
